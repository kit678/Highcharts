"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/highstock-tradingview",{

/***/ "./components/HighstockTradingViewChart.js":
/*!*************************************************!*\
  !*** ./components/HighstockTradingViewChart.js ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _utils_highchartsInit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/highchartsInit */ \"./utils/highchartsInit.js\");\n/* harmony import */ var _utils_dataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/dataUtils */ \"./utils/dataUtils.js\");\n/* harmony import */ var _utils_uiUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/uiUtils */ \"./utils/uiUtils.js\");\n/* harmony import */ var _utils_chartOptionsBuilder__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/chartOptionsBuilder */ \"./utils/chartOptionsBuilder.js\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\n\n// Import utility functions\n\n\n\n\n/**\n * A TradingView-like chart component with price-to-bar ratio locking\n * \n * This component renders a financial chart with:\n * - Ability to lock price-to-bar ratio (aspect ratio) to maintain angle consistency\n * - OHLC/Candlestick data visualization\n * - Pivot point detection\n */ var HighstockTradingViewChart = function(param) {\n    var _data = param.data, data = _data === void 0 ? [] : _data, _title = param.title, title = _title === void 0 ? \"Price Chart\" : _title, _initialPriceToBarRatio = param.initialPriceToBarRatio, initialPriceToBarRatio = _initialPriceToBarRatio === void 0 ? 1 : _initialPriceToBarRatio;\n    _s();\n    var chartRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    var chartInstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(initialPriceToBarRatio), priceToBarRatio = ref[0], setPriceToBarRatio = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(initialPriceToBarRatio.toString()), priceToBarRatioText = ref1[0], setPriceToBarRatioText = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false), isRatioLocked = ref2[0], setIsRatioLocked = ref2[1]; // Changed from true to false\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), highcharts = ref3[0], setHighcharts = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true), showPivotPoints = ref4[0], setShowPivotPoints = ref4[1];\n    var ref5 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(5), pivotLookback = ref5[0], setPivotLookback = ref5[1];\n    var ref6 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"5\"), pivotLookbackText = ref6[0], setPivotLookbackText = ref6[1];\n    var ref7 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null), error = ref7[0], setError = ref7[1];\n    var ref8 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"hlc\"), pivotMethod = ref8[0], setPivotMethod = ref8[1]; // Default to high-low pivot detection\n    // Initialize Highcharts on client-side only\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function() {\n        // Only run in browser\n        if (false) {}\n        console.log(\"Starting Highcharts initialization\");\n        // Use setTimeout to ensure the DOM is fully loaded\n        setTimeout(function() {\n            try {\n                setError(null); // Clear any previous errors\n                var highchartsInstance = (0,_utils_highchartsInit__WEBPACK_IMPORTED_MODULE_4__.initHighcharts)();\n                if (!highchartsInstance) {\n                    setError(\"Failed to initialize Highcharts. Check console for details.\");\n                    return;\n                }\n                console.log(\"Highcharts initialized successfully\");\n                setHighcharts(highchartsInstance);\n            } catch (error) {\n                console.error(\"Failed to initialize Highcharts:\", error);\n                setError(\"Failed to initialize Highcharts: \".concat(error.message));\n            }\n        }, 0);\n    }, []);\n    // Handle extremes change for ratio locking\n    var handleSetExtremes = function(axis, e) {\n        if (!isRatioLocked || !chartInstanceRef.current) return;\n        try {\n            var chart = chartInstanceRef.current;\n            var xAxis = axis.isXAxis ? axis : chart.xAxis[0];\n            var yAxis = axis.isXAxis ? chart.yAxis[0] : axis;\n            if (!xAxis || !yAxis) return;\n            var xRange = xAxis.max - xAxis.min;\n            var series = chart.series[0];\n            if (!series) return;\n            // Calculate bar time length and bars in view\n            var ref = (0,_utils_dataUtils__WEBPACK_IMPORTED_MODULE_5__.calculateBarTimeLength)(series, xAxis), barTimeLength = ref.barTimeLength, barsInView = ref.barsInView;\n            // Add debug logging\n            console.log(\"\\uD83D\\uDD0D DEBUG: Ratio lock calculations:\", {\n                priceToBarRatio: priceToBarRatio,\n                xRange: xRange,\n                barTimeLength: barTimeLength,\n                barsInView: barsInView || \"N/A\",\n                sourceTrigger: (e === null || e === void 0 ? void 0 : e.trigger) || \"unknown\"\n            });\n            if (barsInView <= 0) {\n                // Fallback to visible points count if barsInView calculation failed\n                var allPoints = series.points || [];\n                var visiblePoints = allPoints.filter(function(p) {\n                    return p.x >= xAxis.min && p.x <= xAxis.max;\n                });\n                var pointsCount = Math.max(1, visiblePoints.length);\n                console.log(\"\\uD83D\\uDD0D DEBUG: Using visible points fallback:\", {\n                    visiblePoints: pointsCount,\n                    allPoints: allPoints.length\n                });\n                // Get price values (not timestamps) from the visible points\n                var minPrice = Infinity, maxPrice = -Infinity;\n                visiblePoints.forEach(function(point) {\n                    minPrice = Math.min(minPrice, point.low || point.y || 0);\n                    maxPrice = Math.max(maxPrice, point.high || point.y || 0);\n                });\n                // Use actual price range instead of timestamp values\n                var actualPriceRange = maxPrice - minPrice;\n                var desiredPriceRange = priceToBarRatio * pointsCount;\n                var pricePadding = (desiredPriceRange - actualPriceRange) / 2;\n                // Calculate the center of the price range\n                var priceCenter = (minPrice + maxPrice) / 2;\n                console.log(\"\\uD83D\\uDD0D DEBUG: Price calculation:\", {\n                    minPrice: minPrice,\n                    maxPrice: maxPrice,\n                    actualPriceRange: actualPriceRange,\n                    desiredPriceRange: desiredPriceRange,\n                    priceCenter: priceCenter\n                });\n                // Avoid setting extremes with identical values to reduce recursion\n                if (Math.abs(yAxis.min - (priceCenter - desiredPriceRange / 2)) > 0.0001 || Math.abs(yAxis.max - (priceCenter + desiredPriceRange / 2)) > 0.0001) {\n                    // Only update if the axis is different from the one that triggered this\n                    if (axis.isXAxis && !e.syncYAxis) {\n                        // Set new extremes for Y-axis when X-axis changes\n                        yAxis.setExtremes(priceCenter - desiredPriceRange / 2, priceCenter + desiredPriceRange / 2, true, false, {\n                            syncYAxis: true\n                        } // Add flag to prevent recursion\n                        );\n                        console.log(\"✅ DEBUG: Applied ratio lock to Y-axis:\", {\n                            newMin: priceCenter - desiredPriceRange / 2,\n                            newMax: priceCenter + desiredPriceRange / 2,\n                            desiredPriceRange: desiredPriceRange\n                        });\n                    } else if (!axis.isXAxis && !e.syncXAxis && e.trigger !== \"syncExtremes\") {\n                    // Handle Y-axis changes by adjusting X-axis if needed\n                    // This would only happen if user directly manipulates Y-axis\n                    // Implementation depends on desired behavior - often not needed\n                    }\n                }\n                return;\n            }\n            // Apply ratio with bar time length - this is the primary path\n            var priceRange = priceToBarRatio * barsInView;\n            // Get actual price values from the visible points\n            var visiblePoints1 = series.points.filter(function(p) {\n                return p.x >= xAxis.min && p.x <= xAxis.max;\n            });\n            var minPrice1 = Infinity, maxPrice1 = -Infinity;\n            visiblePoints1.forEach(function(point) {\n                minPrice1 = Math.min(minPrice1, point.low || point.y || 0);\n                maxPrice1 = Math.max(maxPrice1, point.high || point.y || 0);\n            });\n            // Use price center from actual data, not from timestamps\n            var priceCenter1 = (minPrice1 + maxPrice1) / 2;\n            console.log(\"\\uD83D\\uDD0D DEBUG: Price calculation for primary path:\", {\n                minPrice: minPrice1,\n                maxPrice: maxPrice1,\n                priceCenter: priceCenter1,\n                desiredPriceRange: priceRange\n            });\n            // Avoid setting extremes with identical values to reduce recursion\n            if (Math.abs(yAxis.min - (priceCenter1 - priceRange / 2)) > 0.0001 || Math.abs(yAxis.max - (priceCenter1 + priceRange / 2)) > 0.0001) {\n                // Only update if the axis is different from the one that triggered this\n                if (axis.isXAxis && !e.syncYAxis) {\n                    // Set new extremes for Y-axis when X-axis changes\n                    yAxis.setExtremes(priceCenter1 - priceRange / 2, priceCenter1 + priceRange / 2, true, false, {\n                        syncYAxis: true\n                    } // Add flag to prevent recursion\n                    );\n                    console.log(\"✅ DEBUG: Applied ratio lock to Y-axis:\", {\n                        newMin: priceCenter1 - priceRange / 2,\n                        newMax: priceCenter1 + priceRange / 2,\n                        priceRange: priceRange\n                    });\n                } else if (!axis.isXAxis && !e.syncXAxis && e.trigger !== \"syncExtremes\") {\n                // Handle Y-axis changes by adjusting X-axis if needed\n                // This would only happen if user directly manipulates Y-axis\n                // Implementation depends on desired behavior - often not needed\n                }\n            }\n        } catch (error) {\n            console.error(\"Error handling extremes change:\", error);\n        }\n    };\n    // Toggle pivot points visibility\n    var togglePivotPoints = function() {\n        // Toggle state first\n        var newState = !showPivotPoints;\n        setShowPivotPoints(newState);\n        // If we have a chart instance, update the pivot points\n        if (chartInstanceRef.current) {\n            var chart = chartInstanceRef.current;\n            if (newState) {\n                // We're enabling pivot points\n                try {\n                    if (chart.Highcharts && typeof chart.Highcharts.createPivotPoints === \"function\") {\n                        console.log(\"Enabling pivot points with lookback=\".concat(pivotLookback));\n                        // Pass the raw data directly to ensure we have access to it\n                        chart.Highcharts.createPivotPoints(chart, \"price-series\", {\n                            lookback: pivotLookback,\n                            method: pivotMethod,\n                            sourceData: data // Pass the original data directly\n                        });\n                    } else {\n                        console.warn(\"createPivotPoints function not available\");\n                        setError(\"Pivot points feature is not available\");\n                    }\n                } catch (err) {\n                    console.error(\"Error creating pivot points:\", err);\n                    setError(\"Failed to create pivot points: \".concat(err.message));\n                }\n            } else {\n                // We're disabling pivot points - remove the series\n                try {\n                    console.log(\"Removing pivot points\");\n                    var pivotHighs = chart.get(\"pivot-highs\");\n                    var pivotLows = chart.get(\"pivot-lows\");\n                    if (pivotHighs) pivotHighs.remove(false);\n                    if (pivotLows) pivotLows.remove(false);\n                    chart.redraw();\n                } catch (err1) {\n                    console.error(\"Error removing pivot points:\", err1);\n                }\n            }\n        }\n    };\n    // Handle pivot lookback change\n    var handlePivotLookbackChange = function(e) {\n        setPivotLookbackText(e.target.value);\n    };\n    // Update pivot lookback when input loses focus\n    var handlePivotLookbackBlur = function() {\n        // Parse and validate the input value\n        var value = parseInt(pivotLookbackText, 10);\n        if (!isNaN(value) && value >= 2 && value <= 20) {\n            setPivotLookback(value);\n            // Update pivot points if enabled and chart exists\n            if (showPivotPoints && chartInstanceRef.current) {\n                var chart = chartInstanceRef.current;\n                try {\n                    if (chart.Highcharts && typeof chart.Highcharts.createPivotPoints === \"function\") {\n                        // Remove existing pivot points\n                        var pivotHighs = chart.get(\"pivot-highs\");\n                        var pivotLows = chart.get(\"pivot-lows\");\n                        if (pivotHighs) pivotHighs.remove(false);\n                        if (pivotLows) pivotLows.remove(false);\n                        // Create new pivot points with updated lookback\n                        console.log(\"Updating pivot lookback to \".concat(value));\n                        chart.Highcharts.createPivotPoints(chart, \"price-series\", {\n                            lookback: value,\n                            method: pivotMethod\n                        });\n                    } else {\n                        console.warn(\"createPivotPoints function not available\");\n                    }\n                } catch (err) {\n                    console.error(\"Error updating pivot points:\", err);\n                    setError(\"Failed to update pivot points: \".concat(err.message));\n                }\n            }\n        } else {\n            // Reset to previous valid value\n            setPivotLookbackText(pivotLookback.toString());\n            console.log(\"Invalid pivot lookback: \".concat(value, \", using \").concat(pivotLookback, \" instead\"));\n        }\n    };\n    var handlePivotLookbackKeyDown = function(e) {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            handlePivotLookbackBlur();\n            e.target.blur();\n        }\n    };\n    // Add toggle function\n    var togglePivotMethod = function() {\n        var newMethod = pivotMethod === \"hlc\" ? \"close\" : \"hlc\";\n        setPivotMethod(newMethod);\n        // If chart exists and pivot points are enabled, refresh them\n        if (chartInstanceRef.current && showPivotPoints) {\n            var chart = chartInstanceRef.current;\n            if (chart.Highcharts && typeof chart.Highcharts.createPivotPoints === \"function\") {\n                console.log(\"Switching pivot detection method to: \".concat(newMethod));\n                // Clear existing pivot points\n                var pivotHighs = chart.get(\"pivot-highs\");\n                var pivotLows = chart.get(\"pivot-lows\");\n                if (pivotHighs) pivotHighs.remove(false);\n                if (pivotLows) pivotLows.remove(false);\n                // Create new pivot points with updated method\n                chart.Highcharts.createPivotPoints(chart, \"price-series\", {\n                    lookback: pivotLookback,\n                    method: newMethod,\n                    sourceData: data\n                });\n            }\n        }\n    };\n    // Create or update chart when highcharts or data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function() {\n        if (!chartRef.current || !data || data.length === 0 || !highcharts) return;\n        console.log(\"\\uD83D\\uDD0D DEBUG: Creating chart with data length:\", data.length);\n        try {\n            setError(null); // Clear any previous errors\n            // Create chart with options from builder\n            var chartOptions = (0,_utils_chartOptionsBuilder__WEBPACK_IMPORTED_MODULE_7__.buildChartOptions)(data, {\n                title: title,\n                priceToBarRatio: priceToBarRatio,\n                isRatioLocked: isRatioLocked,\n                onSetExtremes: handleSetExtremes,\n                updateOHLCDisplay: _utils_uiUtils__WEBPACK_IMPORTED_MODULE_6__.updateOHLCDisplay,\n                showPivotPoints: showPivotPoints,\n                pivotLookback: pivotLookback,\n                pivotMethod: pivotMethod\n            });\n            // Log the series configuration\n            if (chartOptions.series && chartOptions.series.length > 0) {\n                console.log(\"Series configuration:\", chartOptions.series.map(function(s) {\n                    return {\n                        type: s.type,\n                        id: s.id,\n                        name: s.name,\n                        dataLength: s.data.length\n                    };\n                }));\n            }\n            // Create the chart\n            var chart = highcharts.stockChart(chartRef.current, chartOptions);\n            console.log(\"\\uD83D\\uDD0D DEBUG: Chart created successfully\");\n            // Store the chart instance for later use\n            chartInstanceRef.current = chart;\n            // Attach Highcharts instance to the chart for access to utility functions\n            chart.Highcharts = highcharts;\n            // Explicitly create pivot points if they're enabled\n            // Add longer delay and additional checking\n            if (showPivotPoints) {\n                console.log(\"\\uD83D\\uDD0D DEBUG: Scheduling pivot points initialization\");\n                setTimeout(function() {\n                    try {\n                        if (chart && chart.Highcharts && typeof chart.Highcharts.createPivotPoints === \"function\") {\n                            var seriesIds = chart.series.map(function(s) {\n                                return s.options.id || \"no-id\";\n                            }).join(\", \");\n                            console.log(\"Available series IDs: \".concat(seriesIds));\n                            // Check if price-series exists\n                            var mainSeries = chart.get(\"price-series\");\n                            if (!mainSeries) {\n                                console.warn(\"price-series not found, will use first series\");\n                            }\n                            chart.Highcharts.createPivotPoints(chart, \"price-series\", {\n                                lookback: pivotLookback,\n                                method: pivotMethod\n                            });\n                        } else {\n                            console.error(\"Pivot points creation failed: Required functions not available\");\n                        }\n                    } catch (err) {\n                        console.error(\"Failed to create pivot points:\", err);\n                    }\n                }, 1500); // Give the chart more time to initialize\n            }\n        } catch (error) {\n            console.error(\"❌ DEBUG: Error creating chart:\", error);\n            setError(\"Error creating chart: \".concat(error.message));\n            // Fall back to basic chart\n            (0,_utils_highchartsInit__WEBPACK_IMPORTED_MODULE_4__.createBasicChart)(chartRef.current, data);\n        }\n        // Cleanup function\n        return function() {\n            if (chartInstanceRef.current) {\n                try {\n                    chartInstanceRef.current.destroy();\n                    chartInstanceRef.current = null;\n                } catch (error) {\n                    console.warn(\"Error destroying chart:\", error);\n                }\n            }\n        };\n    }, [\n        data,\n        priceToBarRatio,\n        isRatioLocked,\n        title,\n        highcharts,\n        showPivotPoints,\n        pivotLookback,\n        pivotMethod\n    ]);\n    // UI event handlers\n    var handleRatioTextChange = function(e) {\n        setPriceToBarRatioText(e.target.value);\n    };\n    var handleRatioBlur = function() {\n        var newValue = parseFloat(priceToBarRatioText);\n        if (!isNaN(newValue) && newValue > 0) {\n            setPriceToBarRatio(newValue);\n        } else {\n            setPriceToBarRatioText(priceToBarRatio.toString());\n        }\n    };\n    var handleRatioKeyDown = function(e) {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleRatioBlur();\n            e.target.blur();\n        }\n    };\n    var toggleRatioLock = function() {\n        var newState = !isRatioLocked;\n        setIsRatioLocked(newState);\n        console.log(\"Price-to-bar ratio lock \".concat(newState ? \"enabled\" : \"disabled\"));\n        // Apply ratio constraint when enabling\n        if (newState && chartInstanceRef.current) {\n            try {\n                var chart = chartInstanceRef.current;\n                var xAxis = chart.xAxis[0];\n                var yAxis = chart.yAxis[0];\n                if (!xAxis || !yAxis) {\n                    console.warn(\"Missing axis, cannot apply ratio lock\");\n                    return;\n                }\n                var xRange = xAxis.max - xAxis.min;\n                var series = chart.series[0];\n                if (!series) {\n                    console.warn(\"Series not available, cannot apply ratio lock\");\n                    return;\n                }\n                // Calculate bar time length and apply ratio\n                var ref = (0,_utils_dataUtils__WEBPACK_IMPORTED_MODULE_5__.calculateBarTimeLength)(series, xAxis), barTimeLength = ref.barTimeLength, barsInView = ref.barsInView;\n                console.log(\"\\uD83D\\uDD0D DEBUG: Initial ratio lock calculation:\", {\n                    barTimeLength: barTimeLength,\n                    barsInView: barsInView,\n                    xRange: xRange\n                });\n                // If calculation failed, use visible points\n                var effectiveBarsInView = barsInView;\n                if (effectiveBarsInView <= 0) {\n                    var allPoints = series.points || [];\n                    var visiblePoints = allPoints.filter(function(p) {\n                        return p.x >= xAxis.min && p.x <= xAxis.max;\n                    });\n                    if (visiblePoints.length >= 2) {\n                        effectiveBarsInView = visiblePoints.length;\n                    } else {\n                        // Estimate based on total range\n                        var totalRange = allPoints[allPoints.length - 1].x - allPoints[0].x;\n                        effectiveBarsInView = xRange / totalRange * allPoints.length;\n                    }\n                    console.log(\"\\uD83D\\uDD0D DEBUG: Using fallback bars in view:\", effectiveBarsInView);\n                }\n                effectiveBarsInView = Math.max(1, effectiveBarsInView);\n                var yRange = priceToBarRatio * effectiveBarsInView;\n                // Get actual price values from visible points\n                var visiblePoints1 = series.points.filter(function(p) {\n                    return p.x >= xAxis.min && p.x <= xAxis.max;\n                });\n                var minPrice = Infinity, maxPrice = -Infinity;\n                visiblePoints1.forEach(function(point) {\n                    minPrice = Math.min(minPrice, point.low || point.y || 0);\n                    maxPrice = Math.max(maxPrice, point.high || point.y || 0);\n                });\n                // Use price center from actual data\n                var priceCenter = (minPrice + maxPrice) / 2;\n                console.log(\"Applying price-to-bar ratio lock:\", {\n                    ratio: priceToBarRatio,\n                    barsInView: effectiveBarsInView,\n                    xRange: xRange,\n                    requiredYRange: yRange,\n                    priceMin: minPrice,\n                    priceMax: maxPrice,\n                    priceCenter: priceCenter\n                });\n                yAxis.setExtremes(priceCenter - yRange / 2, priceCenter + yRange / 2, true, true);\n                // Force the chart to recognize the ratio lock by marking the axis\n                chart.ratioLocked = true;\n            } catch (error) {\n                console.error(\"Error applying ratio lock:\", error);\n            }\n        } else if (!newState && chartInstanceRef.current) {\n            // If disabling, mark the chart\n            chartInstanceRef.current.ratioLocked = false;\n        }\n    };\n    // Server-side rendering placeholder\n    if (false) {}\n    // Render component\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-afef9810c87e5431\" + \" \" + \"highstock-chart-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-afef9810c87e5431\" + \" \" + \"chart-controls\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-afef9810c87e5431\" + \" \" + \"ratio-control\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"price-bar-ratio\",\n                                className: \"jsx-afef9810c87e5431\",\n                                children: [\n                                    \"Price-to-Bar Ratio:\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        id: \"price-bar-ratio\",\n                                        type: \"text\",\n                                        value: priceToBarRatioText,\n                                        onChange: handleRatioTextChange,\n                                        onBlur: handleRatioBlur,\n                                        onKeyDown: handleRatioKeyDown,\n                                        className: \"jsx-afef9810c87e5431\" + \" \" + \"ratio-input\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                        lineNumber: 576,\n                                        columnNumber: 17\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 574,\n                                columnNumber: 15\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleRatioLock,\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"ratio-lock-button \".concat(isRatioLocked ? \"locked\" : \"unlocked\"),\n                                children: isRatioLocked ? \"\\uD83D\\uDD12 Locked\" : \"\\uD83D\\uDD13 Unlocked\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 586,\n                                columnNumber: 15\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"ratio-info\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    className: \"jsx-afef9810c87e5431\",\n                                    children: \"Try values between 0.1 and 10 for best results\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                    lineNumber: 593,\n                                    columnNumber: 13\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 592,\n                                columnNumber: 15\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                        lineNumber: 573,\n                        columnNumber: 13\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-afef9810c87e5431\" + \" \" + \"pivot-control\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"pivot-lookback\",\n                                className: \"jsx-afef9810c87e5431\",\n                                children: [\n                                    \"Pivot Lookback:\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        id: \"pivot-lookback\",\n                                        type: \"text\",\n                                        value: pivotLookbackText,\n                                        onChange: handlePivotLookbackChange,\n                                        onBlur: handlePivotLookbackBlur,\n                                        onKeyDown: handlePivotLookbackKeyDown,\n                                        className: \"jsx-afef9810c87e5431\" + \" \" + \"pivot-input\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                        lineNumber: 600,\n                                        columnNumber: 13\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 598,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: togglePivotPoints,\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"pivot-toggle-button \".concat(showPivotPoints ? \"active\" : \"inactive\"),\n                                children: showPivotPoints ? \"\\uD83D\\uDC41️ Hide Pivots\" : \"\\uD83D\\uDC41️ Show Pivots\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 610,\n                                columnNumber: 11\n                            }, _this),\n                            showPivotPoints && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: togglePivotMethod,\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"pivot-method-button\",\n                                children: pivotMethod === \"hlc\" ? \"\\uD83D\\uDD04 Using High/Low\" : \"\\uD83D\\uDD04 Using Close\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 619,\n                                columnNumber: 13\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"pivot-info\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                                    className: \"jsx-afef9810c87e5431\",\n                                    children: \"Number of bars to check on each side\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                    lineNumber: 628,\n                                    columnNumber: 13\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 627,\n                                columnNumber: 11\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                        lineNumber: 597,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-afef9810c87e5431\" + \" \" + \"ohlc-display-container\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            id: \"ohlc-display\",\n                            className: \"jsx-afef9810c87e5431\" + \" \" + \"ohlc-display\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"jsx-afef9810c87e5431\",\n                                children: \"Hover over candle\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 634,\n                                columnNumber: 17\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                            lineNumber: 633,\n                            columnNumber: 15\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                        lineNumber: 632,\n                        columnNumber: 13\n                    }, _this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-afef9810c87e5431\" + \" \" + \"chart-error\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"jsx-afef9810c87e5431\",\n                                children: [\n                                    \"⚠️ \",\n                                    error\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 639,\n                                columnNumber: 13\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: function() {\n                                    return window.location.reload();\n                                },\n                                className: \"jsx-afef9810c87e5431\" + \" \" + \"error-reload-button\",\n                                children: \"Reload Page\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                                lineNumber: 640,\n                                columnNumber: 13\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                        lineNumber: 638,\n                        columnNumber: 11\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                lineNumber: 572,\n                columnNumber: 11\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-afef9810c87e5431\" + \" \" + \"highcharts-stock-chart-wrapper\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    ref: chartRef,\n                    className: \"jsx-afef9810c87e5431\" + \" \" + \"chart-container\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                    lineNumber: 650,\n                    columnNumber: 13\n                }, _this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n                lineNumber: 649,\n                columnNumber: 11\n            }, _this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"afef9810c87e5431\",\n                children: \".highstock-chart-container.jsx-afef9810c87e5431{width:100%;padding:20px;background-color:#fff;-webkit-border-radius:8px;-moz-border-radius:8px;border-radius:8px;-webkit-box-shadow:0 4px 12px rgba(0,0,0,.1);-moz-box-shadow:0 4px 12px rgba(0,0,0,.1);box-shadow:0 4px 12px rgba(0,0,0,.1);position:relative}.chart-controls.jsx-afef9810c87e5431{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:20px;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;position:relative;gap:20px}.ratio-control.jsx-afef9810c87e5431,.pivot-control.jsx-afef9810c87e5431{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:10px;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.ratio-input.jsx-afef9810c87e5431,.pivot-input.jsx-afef9810c87e5431{padding:8px 12px;border:1px solid#ccc;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;font-size:14px;width:80px}.ratio-lock-button.jsx-afef9810c87e5431,.pivot-toggle-button.jsx-afef9810c87e5431{padding:8px 12px;background-color:#f0f0f0;border:1px solid#ccc;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;font-size:14px;cursor:pointer;-webkit-transition:all.2s;-moz-transition:all.2s;-o-transition:all.2s;transition:all.2s}.ratio-lock-button.locked.jsx-afef9810c87e5431{background-color:#4caf50;color:white;border-color:#388e3c}.ratio-lock-button.unlocked.jsx-afef9810c87e5431{background-color:#f44336;color:white;border-color:#d32f2f}.pivot-toggle-button.active.jsx-afef9810c87e5431{background-color:#2196f3;color:white;border-color:#0d47a1}.pivot-toggle-button.inactive.jsx-afef9810c87e5431{background-color:#9e9e9e;color:white;border-color:#424242}.ratio-info.jsx-afef9810c87e5431,.pivot-info.jsx-afef9810c87e5431{margin-top:4px;font-size:12px;color:#666}.ohlc-display-container.jsx-afef9810c87e5431{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-moz-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;min-width:300px}.ohlc-display.jsx-afef9810c87e5431{background-color:rgba(255,255,255,.8);padding:8px 12px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 4px rgba(0,0,0,.1);-moz-box-shadow:0 1px 4px rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.1);font-size:14px;z-index:10;position:relative}.highcharts-stock-chart-wrapper.jsx-afef9810c87e5431{position:relative;width:100%;height:600px;margin-bottom:40px}.chart-container.jsx-afef9810c87e5431{width:100%;height:100%;position:relative;overflow:visible}.highcharts-container{overflow:visible!important}.highcharts-navigator-series{fill-opacity:.3}.highcharts-scrollbar{margin-top:10px}.chart-error.jsx-afef9810c87e5431{background-color:#ffebee;color:#c62828;padding:15px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;margin-top:15px;width:100%;text-align:center;-webkit-box-shadow:0 2px 4px rgba(0,0,0,.1);-moz-box-shadow:0 2px 4px rgba(0,0,0,.1);box-shadow:0 2px 4px rgba(0,0,0,.1);display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:10px}.error-reload-button.jsx-afef9810c87e5431{background-color:#2196f3;color:white;border:none;padding:8px 16px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;cursor:pointer;font-weight:500}.error-reload-button.jsx-afef9810c87e5431:hover{background-color:#1976d2}\"\n            }, void 0, false, void 0, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Dev\\\\GannSq9\\\\components\\\\HighstockTradingViewChart.js\",\n        lineNumber: 571,\n        columnNumber: 9\n    }, _this);\n};\n_s(HighstockTradingViewChart, \"zrMJZ3ZyOoccHvc5gLo3DKXoARY=\");\n_c = HighstockTradingViewChart;\nHighstockTradingViewChart.propTypes = {\n    data: (prop_types__WEBPACK_IMPORTED_MODULE_8___default().array),\n    title: (prop_types__WEBPACK_IMPORTED_MODULE_8___default().string),\n    initialPriceToBarRatio: (prop_types__WEBPACK_IMPORTED_MODULE_8___default().number)\n};\n// Export with dynamic to disable SSR for this component\n/* harmony default export */ __webpack_exports__[\"default\"] = (_c2 = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(_c1 = function() {\n    return Promise.resolve(HighstockTradingViewChart);\n}, {\n    ssr: false\n}));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"HighstockTradingViewChart\");\n$RefreshReg$(_c1, \"%default%$dynamic\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/HighstockTradingViewChart.js\n"));

/***/ }),

/***/ "./utils/indicators.js":
/*!*****************************!*\
  !*** ./utils/indicators.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateAngleBetweenPoints\": function() { return /* binding */ calculateAngleBetweenPoints; },\n/* harmony export */   \"getPivotPoints\": function() { return /* binding */ getPivotPoints; },\n/* harmony export */   \"registerCustomIndicators\": function() { return /* binding */ registerCustomIndicators; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/**\n * Custom technical indicators for Highcharts\n * \n * This module contains:\n * - An angle calculator that respects the price-to-bar ratio\n * - Pivot point detection for identifying market tops and bottoms\n */ /**\n * Calculate the angle between two points, accounting for price-to-bar ratio\n * @param {Object} p1 - Starting point {x, y}\n * @param {Object} p2 - Ending point {x, y}\n * @param {Number} priceToBarRatio - The ratio of price units to bar units\n * @returns {Number} - Angle in degrees\n */ \nvar calculateAngleBetweenPoints = function(p1, p2) {\n    var priceToBarRatio = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;\n    // Calculate the adjusted height based on the ratio\n    var dx = p2.x - p1.x;\n    var dy = (p2.y - p1.y) * priceToBarRatio;\n    // Calculate angle in radians and convert to degrees\n    var angleRad = Math.atan2(dy, dx);\n    var angleDeg = angleRad * (180 / Math.PI);\n    return angleDeg;\n};\n/**\n * Detect pivot points (highs and lows) in price data according to classical technical analysis\n * @param {Array} xData - Array of x values (timestamps or indices)\n * @param {Array} yData - Array of y values (prices)\n * @param {Object} params - Parameters { lookback }\n * @returns {Object} - Arrays of pivot high and low points\n */ var getPivotPoints = function(xData, yData) {\n    var params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    var _Math, _Math1;\n    var lookback = params.lookback || 5;\n    // Need at least 2*lookback+1 points to detect pivots\n    if (yData.length < 2 * lookback + 1) {\n        console.warn(\"Not enough data points (\".concat(yData.length, \") to detect pivots (need \").concat(2 * lookback + 1, \")\"));\n        return {\n            highs: [],\n            lows: []\n        };\n    }\n    var pivotHighs = [];\n    var pivotLows = [];\n    // Debug data range to ensure values make sense\n    var minPrice = (_Math = Math).min.apply(_Math, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(yData));\n    var maxPrice = (_Math1 = Math).max.apply(_Math1, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(yData));\n    console.log(\"Data range: min=\".concat(minPrice.toFixed(2), \", max=\").concat(maxPrice.toFixed(2), \", points=\").concat(yData.length));\n    // Iterate through the data, skipping the first and last 'lookback' points\n    for(var i = lookback; i < yData.length - lookback; i++){\n        // Get high and low for the current bar - for OHLC data\n        // If using close prices only, both will be the same value\n        var currentHigh = Array.isArray(yData[i]) ? yData[i][1] : yData[i]; // High\n        var currentLow = Array.isArray(yData[i]) ? yData[i][2] : yData[i]; // Low\n        // Check for pivot high - must be higher than ALL bars in the window\n        var isPivotHigh = true;\n        for(var j = i - lookback; j <= i + lookback; j++){\n            // Skip the current bar\n            if (j === i) continue;\n            // Get high of comparison bar\n            var compareHigh = Array.isArray(yData[j]) ? yData[j][1] : yData[j];\n            // If ANY bar in window has a higher high, this is not a pivot high\n            if (compareHigh >= currentHigh) {\n                isPivotHigh = false;\n                break;\n            }\n        }\n        // Check for pivot low - must be lower than ALL bars in the window\n        var isPivotLow = true;\n        for(var j1 = i - lookback; j1 <= i + lookback; j1++){\n            // Skip the current bar\n            if (j1 === i) continue;\n            // Get low of comparison bar\n            var compareLow = Array.isArray(yData[j1]) ? yData[j1][2] : yData[j1];\n            // If ANY bar in window has a lower low, this is not a pivot low\n            if (compareLow <= currentLow) {\n                isPivotLow = false;\n                break;\n            }\n        }\n        // Save pivot points with their coordinates\n        if (isPivotHigh) {\n            pivotHighs.push({\n                x: xData[i],\n                y: currentHigh,\n                index: i\n            });\n        }\n        if (isPivotLow) {\n            pivotLows.push({\n                x: xData[i],\n                y: currentLow,\n                index: i\n            });\n        }\n    }\n    console.log(\"Found \".concat(pivotHighs.length, \" highs and \").concat(pivotLows.length, \" lows in \").concat(yData.length, \" data points\"));\n    return {\n        highs: pivotHighs,\n        lows: pivotLows\n    };\n};\n/**\n * Register custom indicators with Highcharts\n * @param {Object} Highcharts - The Highcharts instance\n */ var registerCustomIndicators = function(Highcharts) {\n    var tryAlternativePivotMethod = // Fallback method that uses a different approach\n    function tryAlternativePivotMethod(chart, lookback) {\n        console.log(\"Trying alternative pivot detection method...\");\n        try {\n            // Get data from chart's rendered points\n            var points = [];\n            var mainSeries = null;\n            // Find the main price series\n            for(var i = 0; i < chart.series.length; i++){\n                var series = chart.series[i];\n                if (series.type === \"candlestick\" || series.type === \"ohlc\") {\n                    mainSeries = series;\n                    break;\n                }\n            }\n            if (!mainSeries || !mainSeries.points || mainSeries.points.length === 0) {\n                console.error(\"Could not find rendered points in any suitable series\");\n                return {\n                    highs: [],\n                    lows: []\n                };\n            }\n            // Extract data from rendered points\n            var xData = [];\n            var yData = [];\n            mainSeries.points.forEach(function(point) {\n                if (point && point.x && (point.close !== undefined || point.y !== undefined)) {\n                    xData.push(point.x);\n                    yData.push(point.close !== undefined ? point.close : point.y);\n                }\n            });\n            if (xData.length === 0) {\n                console.error(\"No usable data points found in rendered series\");\n                return {\n                    highs: [],\n                    lows: []\n                };\n            }\n            console.log(\"Processing \".concat(xData.length, \" data points from rendered series\"));\n            // Find pivot points \n            var ref = getPivotPoints(xData, yData, {\n                lookback: lookback\n            }), highs = ref.highs, lows = ref.lows;\n            console.log(\"Found \".concat(highs.length, \" highs and \").concat(lows.length, \" lows from rendered data\"));\n            // Remove any existing pivot series\n            chart.series.forEach(function(series) {\n                if (series.options.id === \"pivot-highs\" || series.options.id === \"pivot-lows\") {\n                    series.remove(false);\n                }\n            });\n            // Add pivot high markers\n            if (highs.length > 0) {\n                chart.addSeries({\n                    type: \"scatter\",\n                    name: \"Pivot Highs\",\n                    id: \"pivot-highs\",\n                    color: \"#21b838\",\n                    marker: {\n                        symbol: \"triangle\",\n                        radius: 8,\n                        fillColor: \"rgba(33, 184, 56, 0.9)\",\n                        lineColor: \"#ffffff\",\n                        lineWidth: 2\n                    },\n                    data: highs.map(function(point) {\n                        return [\n                            point.x,\n                            point.y\n                        ];\n                    }),\n                    showInLegend: false,\n                    tooltip: {\n                        pointFormat: '<span style=\"color:#21b838\">●</span> Pivot High: <b>{point.y}</b><br/>'\n                    },\n                    zIndex: 10\n                }, false);\n            }\n            // Add pivot low markers\n            if (lows.length > 0) {\n                chart.addSeries({\n                    type: \"scatter\",\n                    name: \"Pivot Lows\",\n                    id: \"pivot-lows\",\n                    color: \"#d91e1e\",\n                    marker: {\n                        symbol: \"triangle-down\",\n                        radius: 8,\n                        fillColor: \"rgba(217, 30, 30, 0.9)\",\n                        lineColor: \"#ffffff\",\n                        lineWidth: 2\n                    },\n                    data: lows.map(function(point) {\n                        return [\n                            point.x,\n                            point.y\n                        ];\n                    }),\n                    showInLegend: false,\n                    tooltip: {\n                        pointFormat: '<span style=\"color:#d91e1e\">●</span> Pivot Low: <b>{point.y}</b><br/>'\n                    },\n                    zIndex: 10\n                }, false);\n            }\n            // Redraw the chart\n            chart.redraw();\n            return {\n                highs: highs,\n                lows: lows\n            };\n        } catch (error) {\n            console.error(\"Error in alternative pivot method:\", error);\n            return {\n                highs: [],\n                lows: []\n            };\n        }\n    };\n    if (!Highcharts) {\n        console.error(\"Highcharts instance is required to register custom indicators\");\n        return;\n    }\n    // Add direct data approach for pivot points\n    Highcharts.createPivotPoints = function registerCustomIndicators(chart, seriesId) {\n        var params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        // Safety check - make sure we have access to the chart\n        if (!chart) {\n            console.error(\"Invalid chart instance\");\n            return {\n                highs: [],\n                lows: []\n            };\n        }\n        var lookback = params.lookback || 5;\n        var method = params.method || \"hlc\"; // 'hlc' or 'close'\n        console.log(\"Creating pivot points with method: \".concat(method, \", lookback=\").concat(lookback));\n        try {\n            // Get source data directly from the userOptions\n            var sourceData = chart.userOptions.series && chart.userOptions.series[0] && chart.userOptions.series[0].data;\n            if (!sourceData || !Array.isArray(sourceData) || sourceData.length === 0) {\n                console.error(\"No source data available in chart options\");\n                return {\n                    highs: [],\n                    lows: []\n                };\n            }\n            console.log(\"Processing \".concat(sourceData.length, \" data points from source data\"));\n            // Create separate arrays for timestamp, highs, and lows\n            var xData = [];\n            var highData = [];\n            var lowData = [];\n            // Extract high and low values properly from OHLC format\n            sourceData.forEach(function(point) {\n                if (Array.isArray(point) && point.length >= 4) {\n                    // Standard OHLC format [timestamp, open, high, low, close]\n                    xData.push(point[0]); // Timestamp\n                    highData.push(point[2]); // High\n                    lowData.push(point[3]); // Low\n                } else if (typeof point === \"object\" && point.x != null) {\n                    // Object format {x, open, high, low, close}\n                    xData.push(point.x);\n                    highData.push(point.high != null ? point.high : point.y);\n                    lowData.push(point.low != null ? point.low : point.y);\n                } else {\n                    // Simple price format\n                    xData.push(point[0]);\n                    highData.push(point[1]);\n                    lowData.push(point[1]);\n                }\n            });\n            // Find pivot highs using high values\n            var pivotHighs = [];\n            for(var i = lookback; i < highData.length - lookback; i++){\n                var isPivotHigh = true;\n                var currentHigh = highData[i];\n                for(var j = i - lookback; j <= i + lookback; j++){\n                    if (j === i) continue; // Skip the current bar\n                    if (highData[j] >= currentHigh) {\n                        isPivotHigh = false;\n                        break;\n                    }\n                }\n                if (isPivotHigh) {\n                    pivotHighs.push({\n                        x: xData[i],\n                        y: currentHigh,\n                        index: i\n                    });\n                }\n            }\n            // Find pivot lows using low values\n            var pivotLows = [];\n            for(var i1 = lookback; i1 < lowData.length - lookback; i1++){\n                var isPivotLow = true;\n                var currentLow = lowData[i1];\n                for(var j1 = i1 - lookback; j1 <= i1 + lookback; j1++){\n                    if (j1 === i1) continue; // Skip the current bar\n                    if (lowData[j1] <= currentLow) {\n                        isPivotLow = false;\n                        break;\n                    }\n                }\n                if (isPivotLow) {\n                    pivotLows.push({\n                        x: xData[i1],\n                        y: currentLow,\n                        index: i1\n                    });\n                }\n            }\n            console.log(\"Found \".concat(pivotHighs.length, \" highs and \").concat(pivotLows.length, \" lows using true OHLC data\"));\n            // Remove any existing pivot series\n            chart.series.forEach(function(series) {\n                if (series.options.id === \"pivot-highs\" || series.options.id === \"pivot-lows\") {\n                    series.remove(false);\n                }\n            });\n            // Add pivot high markers\n            if (pivotHighs.length > 0) {\n                chart.addSeries({\n                    type: \"scatter\",\n                    name: \"Pivot Highs\",\n                    id: \"pivot-highs\",\n                    color: \"#21b838\",\n                    marker: {\n                        symbol: \"triangle\",\n                        radius: 8,\n                        fillColor: \"rgba(33, 184, 56, 0.9)\",\n                        lineColor: \"#ffffff\",\n                        lineWidth: 2\n                    },\n                    data: pivotHighs.map(function(point) {\n                        return [\n                            point.x,\n                            point.y\n                        ];\n                    }),\n                    showInLegend: false,\n                    tooltip: {\n                        pointFormat: '<span style=\"color:#21b838\">●</span> Pivot High: <b>{point.y}</b><br/>'\n                    },\n                    zIndex: 10\n                }, false);\n                console.log(\"Added pivot highs:\", pivotHighs.map(function(h) {\n                    return h.y.toFixed(2);\n                }).join(\", \"));\n            }\n            // Add pivot low markers\n            if (pivotLows.length > 0) {\n                chart.addSeries({\n                    type: \"scatter\",\n                    name: \"Pivot Lows\",\n                    id: \"pivot-lows\",\n                    color: \"#d91e1e\",\n                    marker: {\n                        symbol: \"triangle-down\",\n                        radius: 8,\n                        fillColor: \"rgba(217, 30, 30, 0.9)\",\n                        lineColor: \"#ffffff\",\n                        lineWidth: 2\n                    },\n                    data: pivotLows.map(function(point) {\n                        return [\n                            point.x,\n                            point.y\n                        ];\n                    }),\n                    showInLegend: false,\n                    tooltip: {\n                        pointFormat: '<span style=\"color:#d91e1e\">●</span> Pivot Low: <b>{point.y}</b><br/>'\n                    },\n                    zIndex: 10\n                }, false);\n                console.log(\"Added pivot lows:\", pivotLows.map(function(l) {\n                    return l.y.toFixed(2);\n                }).join(\", \"));\n            }\n            // Redraw the chart\n            chart.redraw();\n            return {\n                highs: pivotHighs,\n                lows: pivotLows\n            };\n        } catch (error) {\n            console.error(\"Error creating pivot points with direct data approach:\", error);\n            // Fallback to another method if the direct approach fails\n            return tryAlternativePivotMethod(chart, lookback);\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/indicators.js\n"));

/***/ })

});