"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/highstock-tradingview",{

/***/ "./utils/chartOptionsBuilder.js":
/*!**************************************!*\
  !*** ./utils/chartOptionsBuilder.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildChartOptions\": function() { return /* binding */ buildChartOptions; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var _dataUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataUtils */ \"./utils/dataUtils.js\");\n\n\n/**\r\n * Build chart options object based on provided data and settings\r\n */ var buildChartOptions = function(data, param) {\n    var _title = param.title, title = _title === void 0 ? \"Price Chart\" : _title, _priceToBarRatio = param.priceToBarRatio, priceToBarRatio = _priceToBarRatio === void 0 ? 1 : _priceToBarRatio, _isRatioLocked = param.isRatioLocked, isRatioLocked = _isRatioLocked === void 0 ? true : _isRatioLocked, _onSetExtremes = param.onSetExtremes, onSetExtremes = _onSetExtremes === void 0 ? null : _onSetExtremes, _updateOHLCDisplay = param.updateOHLCDisplay, updateOHLCDisplay = _updateOHLCDisplay === void 0 ? null : _updateOHLCDisplay, _showPivotPoints = param.showPivotPoints, showPivotPoints = _showPivotPoints === void 0 ? true : _showPivotPoints, _pivotLookback = param.pivotLookback, pivotLookback = _pivotLookback === void 0 ? 5 : _pivotLookback, _pivotMethod = param.pivotMethod, pivotMethod = _pivotMethod === void 0 ? \"hlc\" // Add a new option: 'close' or 'hlc' (high-low-close)\n     : _pivotMethod;\n    if (!data || data.length === 0) return null;\n    // Process data\n    var ohlcData = (0,_dataUtils__WEBPACK_IMPORTED_MODULE_0__.formatOHLCData)(data);\n    var volumeData = (0,_dataUtils__WEBPACK_IMPORTED_MODULE_0__.formatVolumeData)(data);\n    // Calculate axis ranges\n    var yAxisConfig = (0,_dataUtils__WEBPACK_IMPORTED_MODULE_0__.calculateYAxisRange)(data, priceToBarRatio);\n    // Date range info\n    var startDate = ohlcData[0][0];\n    var endDate = ohlcData[ohlcData.length - 1][0];\n    var timeRange = endDate - startDate;\n    // Core chart options structure\n    return {\n        chart: {\n            height: 600,\n            animation: false,\n            panning: {\n                enabled: true,\n                type: \"xy\"\n            },\n            panKey: undefined,\n            zoomType: undefined,\n            marginBottom: 100,\n            spacingBottom: 20,\n            spacing: [\n                10,\n                10,\n                20,\n                10\n            ],\n            events: {\n                load: function load() {\n                    var _this = this;\n                    console.log(\"\\uD83D\\uDD0D DEBUG: Chart load event triggered\");\n                    // Ensure zooming and ratio locking works with the initial view\n                    if (isRatioLocked && onSetExtremes) {\n                        try {\n                            var xAxis = this.xAxis[0];\n                            var extremes = {\n                                min: xAxis.min,\n                                max: xAxis.max\n                            };\n                            // Initialize the proper Y-axis range based on visible X range\n                            setTimeout(function() {\n                                return onSetExtremes(xAxis, extremes);\n                            }, 100);\n                        } catch (error) {\n                            console.error(\"Error applying initial ratio:\", error);\n                        }\n                    }\n                    // Initialize pivot points if enabled\n                    if (showPivotPoints && this.Highcharts && this.Highcharts.createPivotPoints) {\n                        try {\n                            // Give time for series to render first\n                            setTimeout(function() {\n                                _this.Highcharts.createPivotPoints(_this, \"price-series\", {\n                                    lookback: pivotLookback\n                                });\n                            }, 200);\n                        } catch (error1) {\n                            console.error(\"Error creating pivot points:\", error1);\n                        }\n                    }\n                    console.log(\"\\uD83D\\uDD0D DEBUG: Chart initialized successfully\");\n                },\n                redraw: function redraw() {\n                    // Update OHLC display on redraw if callback provided\n                    if (updateOHLCDisplay && this.hoverPoints && this.hoverPoints[0]) {\n                        updateOHLCDisplay(this.hoverPoints[0]);\n                    }\n                }\n            }\n        },\n        // Range selector options\n        rangeSelector: {\n            enabled: true,\n            selected: 1,\n            height: 40,\n            buttonPosition: {\n                align: \"center\",\n                x: 0,\n                y: 0\n            },\n            buttonTheme: {\n                width: 28,\n                height: 18,\n                padding: 2,\n                fill: \"#f8f8f8\",\n                stroke: \"#cccccc\",\n                \"stroke-width\": 1,\n                style: {\n                    color: \"#333333\",\n                    fontWeight: \"normal\"\n                },\n                states: {\n                    hover: {\n                        fill: \"#e6e6e6\",\n                        style: {\n                            color: \"#333333\"\n                        }\n                    },\n                    select: {\n                        fill: \"#e6e6e6\",\n                        style: {\n                            color: \"#333333\",\n                            fontWeight: \"bold\"\n                        }\n                    }\n                }\n            },\n            buttons: [\n                {\n                    type: \"month\",\n                    count: 1,\n                    text: \"1m\"\n                },\n                {\n                    type: \"month\",\n                    count: 3,\n                    text: \"3m\"\n                },\n                {\n                    type: \"month\",\n                    count: 6,\n                    text: \"6m\"\n                },\n                {\n                    type: \"ytd\",\n                    text: \"YTD\"\n                },\n                {\n                    type: \"year\",\n                    count: 1,\n                    text: \"1y\"\n                },\n                {\n                    type: \"all\",\n                    text: \"All\"\n                }\n            ],\n            inputEnabled: true\n        },\n        // Navigator and scrollbar\n        navigator: {\n            enabled: true,\n            adaptToUpdatedData: true,\n            height: 50,\n            margin: 30,\n            outlineWidth: 1,\n            maskFill: \"rgba(102, 133, 194, 0.2)\",\n            handles: {\n                backgroundColor: \"#f2f2f2\",\n                borderColor: \"#999\"\n            }\n        },\n        scrollbar: {\n            enabled: true,\n            margin: 8,\n            height: 8,\n            barBackgroundColor: \"#cccccc\",\n            barBorderRadius: 5,\n            barBorderWidth: 0,\n            buttonBackgroundColor: \"#cccccc\",\n            buttonBorderWidth: 0,\n            buttonBorderRadius: 5,\n            trackBackgroundColor: \"#f2f2f2\",\n            trackBorderWidth: 0,\n            trackBorderRadius: 5,\n            liveRedraw: false // Disable live redraw for better performance\n        },\n        // Chart title\n        title: {\n            text: title\n        },\n        // Plot styling\n        plotOptions: {\n            candlestick: {\n                // Restore original colors to maintain original appearance\n                color: \"#2f7ed8\",\n                upColor: \"white\",\n                lineColor: \"#2f7ed8\",\n                upLineColor: \"#2f7ed8\",\n                states: {\n                    hover: {\n                        brightness: 0.1\n                    }\n                },\n                // Ensure no gaps in data\n                gapSize: 0,\n                dataGrouping: {\n                    enabled: false // Disable data grouping for consistent display\n                }\n            },\n            series: {\n                pointPadding: 0.1,\n                groupPadding: 0.1,\n                borderWidth: 1,\n                dataGrouping: {\n                    enabled: false\n                },\n                clip: false,\n                events: {\n                    // Ensure proper data rendering\n                    afterAnimate: function afterAnimate() {\n                        var _this = this;\n                        if (this.chart && this.chart.redraw) {\n                            setTimeout(function() {\n                                _this.chart.redraw(false);\n                            }, 100);\n                        }\n                    }\n                }\n            }\n        },\n        // Tooltip configuration\n        tooltip: {\n            enabled: true,\n            followPointer: true,\n            followTouchMove: true,\n            formatter: function formatter() {\n                if (!this.points || !this.points[0] || !this.points[0].point) return false;\n                // Update the OHLC display if callback provided\n                if (updateOHLCDisplay) {\n                    updateOHLCDisplay(this.points[0].point);\n                }\n                // Return false to prevent showing the tooltip\n                return false;\n            }\n        },\n        // X-axis configuration\n        xAxis: {\n            ordinal: false,\n            minRange: 24 * 3600 * 1000,\n            overscroll: 2,\n            min: null,\n            max: null,\n            maxPadding: 0.3,\n            minPadding: 0.05,\n            lineWidth: 1,\n            tickLength: 5,\n            margin: 15,\n            offset: 5,\n            events: {\n                afterSetExtremes: function afterSetExtremes(e) {\n                    console.log(\"X-axis extremes changed:\", e.min, e.max);\n                    if (!isRatioLocked || !onSetExtremes) return;\n                    // Apply ratio lock when X-axis changes\n                    onSetExtremes(this, e);\n                },\n                setExtremes: function setExtremes(e) {\n                    // If ratio locked, we need to also listen for setExtremes (called before afterSetExtremes)\n                    if (isRatioLocked && e && e.trigger && e.trigger !== \"syncExtremes\") {\n                        console.log(\"X-axis setExtremes called:\", e.trigger);\n                    }\n                }\n            }\n        },\n        // Y-axis configuration\n        yAxis: [\n            {\n                // Price axis\n                min: null,\n                max: null,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.2,\n                maxPadding: 0.2,\n                labels: {\n                    align: \"right\",\n                    x: -3\n                },\n                title: {\n                    text: \"Price\"\n                },\n                height: \"65%\",\n                lineWidth: 2,\n                resize: {\n                    enabled: true\n                },\n                softMin: yAxisConfig.min,\n                softMax: yAxisConfig.max,\n                showEmpty: false,\n                events: {\n                    afterSetExtremes: function afterSetExtremes(e) {\n                        console.log(\"Y-axis extremes changed:\", e.min, e.max);\n                        if (!isRatioLocked || !onSetExtremes) return;\n                        // Only apply ratio lock when Y-axis changes directly (not as result of X change)\n                        if (e.trigger && e.trigger !== \"syncExtremes\") {\n                            onSetExtremes(this, e);\n                        }\n                    }\n                }\n            },\n            {\n                // Volume axis\n                labels: {\n                    align: \"right\",\n                    x: -3\n                },\n                title: {\n                    text: \"Volume\"\n                },\n                top: \"70%\",\n                height: \"30%\",\n                offset: 0,\n                lineWidth: 2,\n                min: null,\n                max: null,\n                minPadding: 0.2,\n                maxPadding: 0.2,\n                showEmpty: false\n            }\n        ],\n        // Series data\n        series: [\n            // Main price series\n            {\n                type: \"candlestick\",\n                name: \"Price\",\n                id: \"price-series\",\n                data: ohlcData,\n                dataGrouping: {\n                    enabled: false\n                },\n                // Colors to match original appearance\n                color: \"#2f7ed8\",\n                upColor: \"white\",\n                lineColor: \"#2f7ed8\",\n                upLineColor: \"#2f7ed8\" // Up candle border\n            }\n        ].concat(// Add volume series if available\n        (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(volumeData.length > 0 ? [\n            {\n                type: \"column\",\n                name: \"Volume\",\n                id: \"volume-series\",\n                data: volumeData,\n                yAxis: 1,\n                color: \"rgba(100, 100, 255, 0.5)\"\n            }\n        ] : []))\n    };\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/chartOptionsBuilder.js\n"));

/***/ })

});